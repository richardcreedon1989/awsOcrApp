{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\creedonr\\\\budgetreactapp\\\\src\\\\components\\\\cost.jsx\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Cost = props => {\n  const budget = props.budget;\n  const total = props.total;\n  const remaining = budget - total;\n  const items = props.item.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \" \", item.name, \" - \", item.price, \" \"));\n\n  function isOverBudget(remainingBudget) {\n    if (remainingBudget < 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  let overBudget = isOverBudget(remaining);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      backgroundColor: \"lightgrey\",\n      alignitems: \"center\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundColor: \"lightgrey\",\n      alignitems: \"center\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \" Budget: \", budget, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: overBudget ? style.class1 : style.class2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \" \", \"Remaining Budget: \", remaining, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \" \", items), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \" Total Cost: \", total, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \" \", overBudget, \" \")))));\n};\n\nexport default Cost; // <div id (maybe style instead of id)={if (condition) { 'msg' }}>Hello World!</div>","map":{"version":3,"sources":["C:/Users/creedonr/budgetreactapp/src/components/cost.jsx"],"names":["React","Container","Card","Cost","props","budget","total","remaining","items","item","map","index","name","price","isOverBudget","remainingBudget","overBudget","backgroundColor","alignitems","textAlign","fontWeight","color","style","class1","class2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AAEA,QAAMC,SAAS,GAAGF,MAAM,GAAGC,KAA3B;AAEA,QAAME,KAAK,GAAGJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,CAACD,IAAD,EAAOE,KAAP,kBAC3B;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGF,IAAI,CAACG,IAFR,SAEiBH,IAAI,CAACI,KAFtB,EAE6B,GAF7B,CADY,CAAd;;AAOA,WAASC,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,QAAIA,eAAe,GAAG,CAAtB,EAAyB;AACvB,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAED,MAAIC,UAAU,GAAGF,YAAY,CAACP,SAAD,CAA7B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLU,MAAAA,eAAe,EAAE,WADZ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,SAAS,EAAE,MAHN;AAILC,MAAAA,UAAU,EAAE,MAJP;AAKLC,MAAAA,KAAK,EAAE;AALF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,eAAe,EAAE,WADZ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,SAAS,EAAE,MAHN;AAILC,MAAAA,UAAU,EAAE,MAJP;AAKLC,MAAAA,KAAK,EAAE;AALF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBhB,MAAhB,MADF,oBACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,eAEE;AAAM,IAAA,SAAS,EAAEW,UAAU,GAAGM,KAAK,CAACC,MAAT,GAAkBD,KAAK,CAACE,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,wBAEqBjB,SAFrB,EAEgC,GAFhC,CAFF,EAKU,GALV,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQC,KAAR,CAPF,oBAOwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPxB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBF,KAApB,MARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOU,UAAP,MAZF,CATF,CATF,CADF,CADF;AAuCD,CA7DD;;AA+DA,eAAeb,IAAf,C,CAEA","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Cost = (props) => {\r\n  const budget = props.budget;\r\n  const total = props.total;\r\n\r\n  const remaining = budget - total;\r\n\r\n  const items = props.item.map((item, index) => (\r\n    <li key={index}>\r\n      {\" \"}\r\n      {item.name} - {item.price}{\" \"}\r\n    </li>\r\n  ));\r\n\r\n  function isOverBudget(remainingBudget) {\r\n    if (remainingBudget < 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let overBudget = isOverBudget(remaining);\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        style={{\r\n          backgroundColor: \"lightgrey\",\r\n          alignitems: \"center\",\r\n          textAlign: \"left\",\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            backgroundColor: \"lightgrey\",\r\n            alignitems: \"center\",\r\n            textAlign: \"left\",\r\n            fontWeight: \"bold\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <ul>\r\n              <span> Budget: {budget} </span> <br />\r\n              <span className={overBudget ? style.class1 : style.class2}>\r\n                {\" \"}\r\n                Remaining Budget: {remaining}{\" \"}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span> {items}</span> <br />\r\n              <span> Total Cost: {total} </span>\r\n              <br />\r\n            </ul>\r\n            <div> {overBudget} </div>\r\n            {/* <div className =\"container\" {if (overBudget) { 'msg' }}>Hello World!</div> */}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cost;\r\n\r\n// <div id (maybe style instead of id)={if (condition) { 'msg' }}>Hello World!</div>\r\n"]},"metadata":{},"sourceType":"module"}