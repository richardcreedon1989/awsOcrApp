{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\creedonr\\\\budgetreactapp\\\\src\\\\components\\\\cost.jsx\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Cost = props => {\n  const budget = props.budget;\n  const total = props.total;\n  const remaining = budget - total;\n  const items = props.item.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textTransform: \"capitalize\",\n      fontStyle: \"italic\",\n      textDecoration: \"underline\",\n      fontSize: \"18px\",\n      fontWeight: \"normal\"\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, item.name, \": \", item.price));\n\n  function isOverBudget(remainingBudget) {\n    if (remainingBudget < 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  let overBudget = isOverBudget(remaining);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      backgroundColor: \"lightgrey\",\n      alignitems: \"center\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundColor: \"lightgrey\",\n      alignitems: \"center\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      color: \"black\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyle: \"none\",\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \" Budget: \", budget, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: overBudget ? styles.red : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Remaining Budget: \", remaining), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \" Item & Cost:\", items), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \" Total Cost: \", total, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst styles = {\n  red: {\n    color: \"red\"\n  },\n  black: {\n    color: \"black\"\n  },\n  containers: {\n    backgroundColor: \"lightgrey\",\n    alignitems: \"center\",\n    textAlign: \"left\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    border: \"none\"\n  }\n};\nexport default Cost; // <div id (maybe style instead of id)={if (condition) { 'msg' }}>Hello World!</div>","map":{"version":3,"sources":["C:/Users/creedonr/budgetreactapp/src/components/cost.jsx"],"names":["React","Container","Card","Cost","props","budget","total","remaining","items","item","map","index","textTransform","fontStyle","textDecoration","fontSize","fontWeight","name","price","isOverBudget","remainingBudget","overBudget","backgroundColor","alignitems","textAlign","color","border","listStyle","styles","red","black","containers"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Cost = (props) => {\r\n  const budget = props.budget;\r\n  const total = props.total;\r\n\r\n  const remaining = budget - total;\r\n\r\n  const items = props.item.map((item, index) => (\r\n    <li\r\n      style={{\r\n        textTransform: \"capitalize\",\r\n        fontStyle: \"italic\",\r\n        textDecoration: \"underline\",\r\n        fontSize: \"18px\",\r\n        fontWeight: \"normal\",\r\n      }}\r\n      key={index}\r\n    >\r\n      {item.name}: {item.price}\r\n    </li>\r\n  ));\r\n\r\n  function isOverBudget(remainingBudget) {\r\n    if (remainingBudget < 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let overBudget = isOverBudget(remaining);\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        style={{\r\n          backgroundColor: \"lightgrey\",\r\n          alignitems: \"center\",\r\n          textAlign: \"left\",\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            backgroundColor: \"lightgrey\",\r\n            alignitems: \"center\",\r\n            textAlign: \"left\",\r\n            fontWeight: \"bold\",\r\n            color: \"black\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <ul style={{ listStyle: \"none\", fontSize: \"20px\" }}>\r\n              <span> Budget: {budget} </span> <br />\r\n              <span style={overBudget ? styles.red : styles.black}>\r\n                Remaining Budget: {remaining}\r\n              </span>\r\n              <br /> <br />\r\n              <span> Item & Cost:{items}</span> <br />\r\n              <span> Total Cost: {total} </span>\r\n              <br />\r\n            </ul>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  red: { color: \"red\" },\r\n  black: { color: \"black\" },\r\n  containers: {\r\n    backgroundColor: \"lightgrey\",\r\n    alignitems: \"center\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    border: \"none\",\r\n  },\r\n};\r\n\r\nexport default Cost;\r\n\r\n// <div id (maybe style instead of id)={if (condition) { 'msg' }}>Hello World!</div>\r\n"]},"metadata":{},"sourceType":"module"}