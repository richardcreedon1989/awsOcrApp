{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\creedonr\\\\budgetreactapp\\\\src\\\\components\\\\cost.jsx\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Cost = props => {\n  const test = props.item.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \" \", item.name, \" - \", item.price, \" \"));\n\n  sumOfTotals = () => {\n    // const onlyItem = [{ price: event.target.itemCost.value }];\n    const item = [{\n      price: event.target.itemCost.value\n    }];\n    console.log(item);\n\n    if (item > 0) {\n      console.log(item);\n      return item.reduce((prev, current) => prev.item + current.item);\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      alignitems: \"center\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \" \", test, \" \"), \" \"))));\n};\n\nexport default Cost;","map":{"version":3,"sources":["C:/Users/creedonr/budgetreactapp/src/components/cost.jsx"],"names":["React","Container","Card","Cost","props","test","item","map","index","name","price","sumOfTotals","event","target","itemCost","value","console","log","reduce","prev","current","alignitems","textAlign","fontWeight","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAACD,IAAD,EAAOE,KAAP,kBAC1B;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGF,IAAI,CAACG,IAFR,SAEiBH,IAAI,CAACI,KAFtB,EAE6B,GAF7B,CADW,CAAb;;AAOAC,EAAAA,WAAW,GAAG,MAAM;AAClB;AACA,UAAML,IAAI,GAAG,CAAC;AAAEI,MAAAA,KAAK,EAAEE,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC;AAA/B,KAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,QAAIA,IAAI,GAAG,CAAX,EAAc;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,aAAOA,IAAI,CAACY,MAAL,CAAY,CAACC,IAAD,EAAOC,OAAP,KAAmBD,IAAI,CAACb,IAAL,GAAYc,OAAO,CAACd,IAAnD,CAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,UAAU,EAAE,QADP;AAELC,MAAAA,SAAS,EAAE,MAFN;AAGLC,MAAAA,UAAU,EAAE,MAHP;AAILC,MAAAA,KAAK,EAAE;AAJF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMnB,IAAN,MAFF,EAEoB,GAFpB,CADF,CARF,CADF,CADF;AAmBD,CAvCD;;AAyCA,eAAeF,IAAf","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Cost = (props) => {\r\n  const test = props.item.map((item, index) => (\r\n    <li key={index}>\r\n      {\" \"}\r\n      {item.name} - {item.price}{\" \"}\r\n    </li>\r\n  ));\r\n\r\n  sumOfTotals = () => {\r\n    // const onlyItem = [{ price: event.target.itemCost.value }];\r\n    const item = [{ price: event.target.itemCost.value }];\r\n    console.log(item);\r\n    if (item > 0) {\r\n      console.log(item);\r\n      return item.reduce((prev, current) => prev.item + current.item);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        style={{\r\n          alignitems: \"center\",\r\n          textAlign: \"left\",\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Card>\r\n          <Card.Body>\r\n            {\" \"}\r\n            <ul> {test} </ul>{\" \"}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cost;\r\n"]},"metadata":{},"sourceType":"module"}